/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package doxy;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.io.FileFilter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JSplitPane;
import javax.swing.JTree;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicSplitPaneDivider;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Rendra
 */
public class Main extends javax.swing.JFrame {
    
    private String projectFolder;
    private DefaultMutableTreeNode rootNode;
    private DefaultTreeModel treeModel;
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        CustomizeUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MyToolbar = new javax.swing.JToolBar();
        TOpenProject = new javax.swing.JToggleButton();
        TRunProject = new javax.swing.JToggleButton();
        TSaveProject = new javax.swing.JToggleButton();
        mySplit = new javax.swing.JSplitPane();
        TabPanels = new javax.swing.JTabbedPane();
        PanelExplorerProject = new javax.swing.JPanel();
        treeScrollPane = new javax.swing.JScrollPane();
        myTree = new javax.swing.JTree();
        PanelRecentProject = new javax.swing.JPanel();
        RightContentPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        StatusPanel = new javax.swing.JPanel();
        MainMenu = new javax.swing.JMenuBar();
        MProject = new javax.swing.JMenu();
        MILoadProject = new javax.swing.JMenuItem();
        MIRunProject = new javax.swing.JMenuItem();
        MSepProject = new javax.swing.JPopupMenu.Separator();
        MFile = new javax.swing.JMenu();
        MIParseFile = new javax.swing.JMenuItem();
        MIParseTranslate = new javax.swing.JMenuItem();
        MISaveAs = new javax.swing.JMenuItem();
        MSepFile = new javax.swing.JPopupMenu.Separator();
        MIGenDocs = new javax.swing.JMenuItem();
        MISaveProject = new javax.swing.JMenuItem();
        MICloseProject = new javax.swing.JMenuItem();
        MSepExit = new javax.swing.JPopupMenu.Separator();
        MIExit = new javax.swing.JMenuItem();
        MHelp = new javax.swing.JMenu();
        MICheckUpdate = new javax.swing.JMenuItem();
        MIAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Doxy - Make Your Project Documentation Sexy");
        setName("MainFrame"); // NOI18N
        setResizable(false);

        MyToolbar.setFloatable(false);
        MyToolbar.setRollover(true);

        TOpenProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/load_project_big.png"))); // NOI18N
        TOpenProject.setToolTipText("Load Project");
        TOpenProject.setFocusable(false);
        TOpenProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TOpenProject.setMargin(new java.awt.Insets(2, 4, 2, 4));
        TOpenProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        TOpenProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TOpenProjectActionPerformed(evt);
            }
        });
        MyToolbar.add(TOpenProject);

        TRunProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/generate_doc_big.png"))); // NOI18N
        TRunProject.setToolTipText("Generate Docs");
        TRunProject.setEnabled(false);
        TRunProject.setFocusable(false);
        TRunProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TRunProject.setMargin(new java.awt.Insets(2, 4, 2, 4));
        TRunProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        MyToolbar.add(TRunProject);

        TSaveProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save_as big.png"))); // NOI18N
        TSaveProject.setToolTipText("Save Project As");
        TSaveProject.setEnabled(false);
        TSaveProject.setFocusable(false);
        TSaveProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TSaveProject.setMargin(new java.awt.Insets(2, 4, 2, 4));
        TSaveProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        MyToolbar.add(TSaveProject);

        mySplit.setBorder(null);
        mySplit.setDividerLocation(230);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        myTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeScrollPane.setViewportView(myTree);

        javax.swing.GroupLayout PanelExplorerProjectLayout = new javax.swing.GroupLayout(PanelExplorerProject);
        PanelExplorerProject.setLayout(PanelExplorerProjectLayout);
        PanelExplorerProjectLayout.setHorizontalGroup(
            PanelExplorerProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );
        PanelExplorerProjectLayout.setVerticalGroup(
            PanelExplorerProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
        );

        TabPanels.addTab("Project Explorer", PanelExplorerProject);

        javax.swing.GroupLayout PanelRecentProjectLayout = new javax.swing.GroupLayout(PanelRecentProject);
        PanelRecentProject.setLayout(PanelRecentProjectLayout);
        PanelRecentProjectLayout.setHorizontalGroup(
            PanelRecentProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );
        PanelRecentProjectLayout.setVerticalGroup(
            PanelRecentProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        TabPanels.addTab("Recent Projects", PanelRecentProject);

        mySplit.setLeftComponent(TabPanels);

        jLabel1.setText("...");

        javax.swing.GroupLayout RightContentPaneLayout = new javax.swing.GroupLayout(RightContentPane);
        RightContentPane.setLayout(RightContentPaneLayout);
        RightContentPaneLayout.setHorizontalGroup(
            RightContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        RightContentPaneLayout.setVerticalGroup(
            RightContentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightContentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(422, Short.MAX_VALUE))
        );

        mySplit.setRightComponent(RightContentPane);

        StatusPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout StatusPanelLayout = new javax.swing.GroupLayout(StatusPanel);
        StatusPanel.setLayout(StatusPanelLayout);
        StatusPanelLayout.setHorizontalGroup(
            StatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        StatusPanelLayout.setVerticalGroup(
            StatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        MProject.setText("Project");

        MILoadProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/load_project.png"))); // NOI18N
        MILoadProject.setText("Load Project");
        MILoadProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MILoadProjectActionPerformed(evt);
            }
        });
        MProject.add(MILoadProject);

        MIRunProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/run_project.png"))); // NOI18N
        MIRunProject.setText("Run Project");
        MIRunProject.setEnabled(false);
        MProject.add(MIRunProject);
        MProject.add(MSepProject);

        MFile.setText("File");

        MIParseFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/parse_file.png"))); // NOI18N
        MIParseFile.setText("Parse File");
        MIParseFile.setEnabled(false);
        MFile.add(MIParseFile);

        MIParseTranslate.setText("Parse & Translate");
        MIParseTranslate.setEnabled(false);
        MFile.add(MIParseTranslate);

        MProject.add(MFile);

        MISaveAs.setText("Save File As");
        MISaveAs.setEnabled(false);
        MProject.add(MISaveAs);
        MProject.add(MSepFile);

        MIGenDocs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/generate_doc.png"))); // NOI18N
        MIGenDocs.setText("Generate Docs");
        MIGenDocs.setEnabled(false);
        MProject.add(MIGenDocs);

        MISaveProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save_as.png"))); // NOI18N
        MISaveProject.setText("Save Project As");
        MISaveProject.setEnabled(false);
        MProject.add(MISaveProject);

        MICloseProject.setText("Close Project");
        MICloseProject.setEnabled(false);
        MICloseProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MICloseProjectActionPerformed(evt);
            }
        });
        MProject.add(MICloseProject);
        MProject.add(MSepExit);

        MIExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exit.png"))); // NOI18N
        MIExit.setText("Exit");
        MIExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIExitActionPerformed(evt);
            }
        });
        MProject.add(MIExit);

        MainMenu.add(MProject);

        MHelp.setText("Help");

        MICheckUpdate.setText("Check For Update");
        MHelp.add(MICheckUpdate);

        MIAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/about.png"))); // NOI18N
        MIAbout.setText("About");
        MHelp.add(MIAbout);

        MainMenu.add(MHelp);

        setJMenuBar(MainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MyToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mySplit)
            .addComponent(StatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MyToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mySplit, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MILoadProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MILoadProjectActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser;
        String choosertitle = "Choose a Root Project Directory";
        chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            //System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            //System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
            projectFolder = chooser.getSelectedFile().getAbsolutePath();
            
            // Set JTree directory browser
            myTree.setRootVisible(true);
            File file = new File(projectFolder);
            rootNode = new DefaultMutableTreeNode(file.getAbsolutePath());
            treeModel = new DefaultTreeModel(rootNode);
            myTree.setModel(treeModel);
            JTree.DynamicUtilTreeNode.createChildren(rootNode, getFileDirectory(file));

            // Set sub icon JTree
            Icon srcIcon = new ImageIcon(getClass().getResource("/assets/file_extension_jar.png"));
            myTree.setCellRenderer(new DefaultTreeCellRenderer(){
                @Override
                public Component getTreeCellRendererComponent(final JTree tree, Object value, boolean sel,
                        boolean expanded, boolean leaf, int row, boolean hasFocus){
                    JLabel label = (JLabel)super.getTreeCellRendererComponent(tree, value, sel, 
                            expanded, leaf, row, hasFocus);  
                  if(((DefaultMutableTreeNode)value).isRoot())
                      label.setIcon(new ImageIcon(getClass().getResource("/assets/application.png")));
                  return label;  
                } 
            });
            DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) myTree.getCellRenderer();
            renderer.setLeafIcon(srcIcon);
            
            enableMenuItems(true);
        }
    }//GEN-LAST:event_MILoadProjectActionPerformed

    private void TOpenProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TOpenProjectActionPerformed
        // TODO add your handling code here:
        MILoadProjectActionPerformed(evt);
    }//GEN-LAST:event_TOpenProjectActionPerformed

    private void MIExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIExitActionPerformed
        // TODO add your handling code here:
        try {            
            Thread.sleep(200);
        } catch (InterruptedException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(1);
    }//GEN-LAST:event_MIExitActionPerformed

    private void MICloseProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MICloseProjectActionPerformed
        // TODO add your handling code here:
        enableMenuItems(false);
    }//GEN-LAST:event_MICloseProjectActionPerformed

    /**
     * Customize GUI :
     * Set root node of the tree disappear if no project selected
     * Set padding the components
     * Create top border of the status panel (bottom panel)
     */
    private void CustomizeUI(){
        myTree.setRootVisible(false);
        flattenSplitPane(mySplit);
        
        // Set the left side panel width to static when frame resized
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                mySplit.setDividerLocation(200);
            }
        });
        
        // Set padding the split pane
        TabPanels.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
        RightContentPane.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
        MyToolbar.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
        myTree.setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
        PanelExplorerProject.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        
        // Create top border the status panel
        StatusPanel.setBorder(BorderFactory.createMatteBorder(1, 0, 0, 0, Color.GRAY));
    }
    
    /**
     * Get list of file from selected project directory
     * 
     * @param directory
     * @return vectorDirectory
     */
    private static MyVector getFileDirectory(File directory) {
        MyVector vectorDirectory = new MyVector(directory.getName());
        File[] files = directory.listFiles(new FileFilter() {
            @Override
            public boolean accept(File pathname) {
                String name = pathname.getName().toLowerCase();
                return name.endsWith(".java") || (pathname.isDirectory() && !("System Volume Information".equalsIgnoreCase(name)));
            }
        });
        for (File file : files) {
            if(file.isDirectory()) {
                MyVector vector = getFileDirectory(file);
                vectorDirectory.add(vector);
            } else {
                vectorDirectory.add(file.getName());
            }
        }
        return vectorDirectory;
    }
    
    /**
     * Set the divider split pane flatten
     * 
     * @param jSplitPane 
     */
    private static void flattenSplitPane(JSplitPane jSplitPane) {
        jSplitPane.setUI(new BasicSplitPaneUI() {
            @Override
            public BasicSplitPaneDivider createDefaultDivider() {
                return new BasicSplitPaneDivider(this) {
                    @Override
                    public void setBorder(Border b) {
                    }
                };
            }
        });
        jSplitPane.setBorder(null);
    }
    
    /**
     * Enable / disable components (MenuItem & ToogleButtons)
     * 
     * @param enable 
     */
    private void enableMenuItems(boolean enable){
        MIRunProject.setEnabled(enable);
        MIParseFile.setEnabled(enable);
        MIParseTranslate.setEnabled(enable);
        MISaveAs.setEnabled(enable);
        MIGenDocs.setEnabled(enable);
        MISaveProject.setEnabled(enable);
        MICloseProject.setEnabled(enable);
        
        TRunProject.setEnabled(enable);
        TSaveProject.setEnabled(enable);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MFile;
    private javax.swing.JMenu MHelp;
    private javax.swing.JMenuItem MIAbout;
    private javax.swing.JMenuItem MICheckUpdate;
    private javax.swing.JMenuItem MICloseProject;
    private javax.swing.JMenuItem MIExit;
    private javax.swing.JMenuItem MIGenDocs;
    private javax.swing.JMenuItem MILoadProject;
    private javax.swing.JMenuItem MIParseFile;
    private javax.swing.JMenuItem MIParseTranslate;
    private javax.swing.JMenuItem MIRunProject;
    private javax.swing.JMenuItem MISaveAs;
    private javax.swing.JMenuItem MISaveProject;
    private javax.swing.JMenu MProject;
    private javax.swing.JPopupMenu.Separator MSepExit;
    private javax.swing.JPopupMenu.Separator MSepFile;
    private javax.swing.JPopupMenu.Separator MSepProject;
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JToolBar MyToolbar;
    private javax.swing.JPanel PanelExplorerProject;
    private javax.swing.JPanel PanelRecentProject;
    private javax.swing.JPanel RightContentPane;
    private javax.swing.JPanel StatusPanel;
    private javax.swing.JToggleButton TOpenProject;
    private javax.swing.JToggleButton TRunProject;
    private javax.swing.JToggleButton TSaveProject;
    private javax.swing.JTabbedPane TabPanels;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSplitPane mySplit;
    private javax.swing.JTree myTree;
    private javax.swing.JScrollPane treeScrollPane;
    // End of variables declaration//GEN-END:variables
}
